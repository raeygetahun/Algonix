'use client'
import React, { use, useEffect, useRef } from 'react'
import { useAnimate, usePresence, useInView, stagger } from "framer-motion";

type Props={
  lineColor:string,
  stepNum:number,
  title:string,
  content:string,
  svgImg:any
  
  
}



const Step=( {props}:{props:Props} )=>{

  const svgRef1=useRef(null)
  

  const [scope, animate] = useAnimate();
  
  const isInView = useInView(svgRef1, {margin: "50% 0px 0px 0px",once:true})
  
  
  const animateItem = async () => {

    // await animate(
    //   ".bell",
    //   {  y: [0, 100]},
    //   { type: "tween", duration: 0.5,delay:0 }
    // );
    
    await animate(
      ".firstSvg",
      { opacity: 1 },
      { type: "tween", duration: 0.5,delay:0.1 }
    );

    
    
    await animate(
      ".line",
      {  scaleY:[0,1] ,opacity:[0,1] },
      { type: "tween", duration: 0.5,delay:0 },
      
    );

    await animate(
      ".secondSvg",
      {y:[-214,0],  opacity: 1 },
      { type: "tween", duration: 0.5,delay:0 }
    );

    
    await animate(
      ".box",
      {  y: [0, 100], opacity: [0,1]},
      { type: "tween", duration: 0.5,delay:0 }
    );

    await animate(
      ".step",
      { y:[0,50], opacity: 1},
      { type: "tween", duration: 0.5,delay:0 }
    );
    await animate(
      ".title",
      {   opacity: 1 },
      { type: "tween", duration: 0.5,delay:0 }
    );  
    await animate(
      ".content",
      {  opacity:  0.75 },
      { type: "tween", duration: 0.5,delay:0 }
    );

   


  };

  useEffect(()=>{

    if(isInView){
      animateItem()
    }
    
  },[isInView])

  return (
    <div  ref={scope} className=' flex flex-col justify-center items-center   ' >

      <div  className=' bell  flex flex-col items-center justify-center'>
         {/* fist ball */}
       
         <svg className='firstSvg opacity-0' xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" fill="none">
  <circle cx="16" cy="16" r="16" fill={props.lineColor}/>
</svg>  

{/* lien */}

<div ref={svgRef1} className={` bg-[${props.lineColor}] ' w-[4px] h-[214px]  line origin-top scale-y-0 '`}>

</div>

{/* second ball */}

<svg className='secondSvg opacity-0' xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" fill="none">
  <circle cx="16" cy="16" r="16" fill={props.lineColor}/>
</svg> 

      </div>
             

             {/* Box */}

             <div className=' opacity-0 box w-[154px] h-[157px] flex flex-col justify-center items-center flex-shrink-0 bg-gradient-to-t from-white-30 to-white-10 border-[0.536px]' >

              {props.svgImg}
               
             </div>

             <span className='step opacity-0 text-white font-Poppins font-[600] text-4xl' >
              0{props.stepNum+1}
             </span>
             <p className='title opacity-0 text-[#92DEED] mt-[100px] font-Space  text-3xl sm:text-[56px] font-bold' >{props.title}</p>
             <p   className='content opacity-0 text-white mt-10  font-Poppins font-[400] text-lg sm:text-[20px] w-[100%] sm:w-[414px] text-center' > {props.content} </p>
    </div>
  )
}


const svgImgs=[

  {
    svgImg:<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 64 64" fill="none">
    <g clip-path="url(#clip0_81_3637)">
      <path d="M56.7271 7.28418C52.0298 2.58691 45.7842 0 39.1406 0C32.4976 0 26.252 2.58691 21.5542 7.28418C18.959 9.87939 17.0581 12.9106 15.8521 16.144L13.8301 14.6416C14.1333 13.8501 14.2993 12.9912 14.2993 12.0942C14.2993 8.15234 11.0918 4.94482 7.14941 4.94482C3.20703 4.94482 0 8.15234 0 12.0947C0 16.0366 3.20703 19.2441 7.14941 19.2441C8.83936 19.2441 10.394 18.6548 11.6191 17.6709L14.7583 20.0039C13.5591 26.0615 14.623 32.4829 17.9512 37.8955L1.69873 54.1475C-0.551758 56.3979 -0.551758 60.0591 1.69873 62.3096C2.78857 63.3994 4.23828 64 5.78027 64C7.32178 64 8.77148 63.3994 9.86182 62.3096L26.1094 46.0625C29.9893 48.458 34.4663 49.7388 39.1406 49.7388C45.7842 49.7388 52.0298 47.1519 56.7271 42.4546C66.4243 32.7578 66.4243 16.981 56.7271 7.28418ZM7.14941 15.4941C5.27539 15.4941 3.75098 13.9692 3.75098 12.0947C3.75098 10.2202 5.27539 8.69482 7.14941 8.69482C9.02393 8.69482 10.5488 10.2202 10.5488 12.0947C10.5488 13.9692 9.02393 15.4941 7.14941 15.4941ZM7.20947 59.6582C6.82764 60.0396 6.31982 60.25 5.78027 60.25C5.24023 60.25 4.73242 60.0396 4.35107 59.6582C3.5625 58.8696 3.5625 57.5874 4.35107 56.7988L7.86279 53.2876L10.7212 56.1465L7.20947 59.6582ZM13.373 53.4941L10.5146 50.6357L20.1826 40.9678C20.6162 41.4775 21.0732 41.9736 21.5542 42.4546C22.0342 42.9346 22.5298 43.3921 23.041 43.8271L13.373 53.4941ZM54.0747 39.8032C50.0859 43.792 44.7822 45.9888 39.1406 45.9888C33.4995 45.9888 28.1958 43.792 24.2065 39.8032C19.4951 35.0913 17.479 28.6895 18.1592 22.5312L26.1836 28.4937C25.8809 29.2856 25.7144 30.1445 25.7144 31.0415C25.7144 34.9834 28.9219 38.1909 32.8643 38.1909C36.8066 38.1909 40.0137 34.9834 40.0137 31.0415C40.0137 29.7495 39.6694 28.5366 39.0674 27.4897L47.5894 18.9673L46.9243 23.6768C46.7798 24.7021 47.4937 25.6504 48.519 25.7954C48.6079 25.8081 48.6963 25.814 48.7837 25.814C49.7031 25.814 50.5059 25.1372 50.6382 24.2007L51.7231 16.5156C51.8931 15.311 51.4976 14.127 50.6372 13.2671C49.7769 12.4072 48.5923 12.0112 47.3887 12.1812L39.7036 13.2661C38.6777 13.4111 37.9639 14.3599 38.1089 15.3848C38.2534 16.4102 39.2026 17.124 40.228 16.9795L44.938 16.3145L36.4155 24.8379C35.3687 24.2363 34.1558 23.8921 32.8638 23.8921C31.1743 23.8921 29.6196 24.481 28.3945 25.4648L19.0093 18.4907C19.9961 15.3589 21.7285 12.4136 24.2065 9.93555C28.1958 5.94678 33.4995 3.75 39.1406 3.75C44.7822 3.75 50.0859 5.94678 54.0747 9.93555C62.3101 18.1699 62.3101 31.5688 54.0747 39.8032ZM29.4653 31.041C29.4653 29.167 30.9897 27.6416 32.8638 27.6416C34.7383 27.6416 36.2627 29.167 36.2627 31.041C36.2627 32.9155 34.7383 34.4409 32.8638 34.4409C30.9897 34.4409 29.4653 32.9155 29.4653 31.041Z" fill="white"/>
    </g>
    <defs>
      <clipPath id="clip0_81_3637">
        <rect width="64" height="64" fill="white"/>
      </clipPath>
    </defs>
  </svg> ,

lineColor:'#92DEED',
content:"We'll conduct a thorough analysis of your operations, market, and competition to identify the best solutions for you.",
title:'Discovery'
},

{
  svgImg:<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 64 64" fill="none">
  <path d="M47.9998 8.66659H44.6665V7.99992C44.6665 5.42712 42.5726 3.33325 39.9998 3.33325H23.9998C21.427 3.33325 19.3332 5.42712 19.3332 7.99992V8.66659H15.9998C11.9556 8.66659 8.6665 11.9557 8.6665 15.9999V53.3333C8.6665 57.3775 11.9556 60.6666 15.9998 60.6666H47.9998C52.0441 60.6666 55.3332 57.3775 55.3332 53.3333V15.9999C55.3332 11.9557 52.0441 8.66659 47.9998 8.66659ZM23.3332 7.99992C23.3332 7.63272 23.6326 7.33325 23.9998 7.33325H39.9998C40.367 7.33325 40.6665 7.63272 40.6665 7.99992V13.3333C40.6665 13.7005 40.367 13.9999 39.9998 13.9999H23.9998C23.6326 13.9999 23.3332 13.7005 23.3332 13.3333V7.99992ZM51.3332 53.3333C51.3332 55.1719 49.8385 56.6666 47.9998 56.6666H15.9998C14.1612 56.6666 12.6665 55.1719 12.6665 53.3333V15.9999C12.6665 14.1613 14.1612 12.6666 15.9998 12.6666H19.3332V13.3333C19.3332 15.9061 21.427 17.9999 23.9998 17.9999H39.9998C42.5726 17.9999 44.6665 15.9061 44.6665 13.3333V12.6666H47.9998C49.8385 12.6666 51.3332 14.1613 51.3332 15.9999V53.3333Z" fill="white"/>
  <path d="M42.6668 35.3333H21.3335C20.2292 35.3333 19.3335 36.229 19.3335 37.3333C19.3335 38.4375 20.2292 39.3333 21.3335 39.3333H42.6668C43.7711 39.3333 44.6668 38.4375 44.6668 37.3333C44.6668 36.229 43.7711 35.3333 42.6668 35.3333Z" fill="white"/>
  <path d="M42.6668 24.6667H21.3335C20.2292 24.6667 19.3335 25.5625 19.3335 26.6667C19.3335 27.771 20.2292 28.6667 21.3335 28.6667H42.6668C43.7711 28.6667 44.6668 27.771 44.6668 26.6667C44.6668 25.5625 43.7711 24.6667 42.6668 24.6667Z" fill="white"/>
  <path d="M42.6668 46H21.3335C20.2292 46 19.3335 46.8957 19.3335 48C19.3335 49.1043 20.2292 50 21.3335 50H42.6668C43.7711 50 44.6668 49.1043 44.6668 48C44.6668 46.8957 43.7711 46 42.6668 46Z" fill="white"/>
</svg>,
lineColor:'#fff',
content:"Once we have a clear understanding, we develop a customized plan for the services and solutions we provide.",
title:'Planning'

},



  {
    svgImg:<svg xmlns="http://www.w3.org/2000/svg" width="72" height="72" viewBox="0 0 72 72" fill="none">
    <path d="M63.0002 36C63.2429 34.8905 63.6933 33.837 64.3277 32.895C65.0483 31.9638 65.5666 30.8925 65.8494 29.7496C66.1323 28.6066 66.1734 27.4173 65.9702 26.2575C65.4441 25.1731 64.6953 24.2119 63.7726 23.4365C62.8499 22.6611 61.774 22.089 60.6152 21.7575C59.6145 21.4142 58.6789 20.9046 57.8477 20.25C57.4221 19.2365 57.1857 18.1537 57.1502 17.055C57.188 15.8577 56.9732 14.6658 56.5196 13.557C56.066 12.4483 55.3839 11.4475 54.5177 10.62C53.4699 10.0568 52.3147 9.72152 51.1282 9.63621C49.9416 9.5509 48.7504 9.71747 47.6327 10.125C46.5673 10.4359 45.4513 10.5353 44.3477 10.4175C43.4721 9.86863 42.7086 9.15857 42.0977 8.325C41.415 7.28761 40.5171 6.40915 39.4651 5.7492C38.413 5.08924 37.2314 4.66321 36.0002 4.5C34.7943 4.66218 33.6361 5.0766 32.601 5.71626C31.5659 6.35592 30.6772 7.20647 29.9927 8.2125C29.3819 9.04606 28.6184 9.75613 27.7427 10.305C26.6391 10.4228 25.5232 10.3234 24.4577 10.0125C23.3401 9.60497 22.1489 9.4384 20.9623 9.52371C19.7757 9.60902 18.6206 9.94428 17.5727 10.5075C16.6903 11.327 15.9914 12.3242 15.5221 13.4334C15.0529 14.5425 14.8239 15.7385 14.8502 16.9425C14.8287 18.0792 14.592 19.2014 14.1527 20.25C13.3298 20.9444 12.3937 21.4924 11.3852 21.87C10.2265 22.2015 9.15061 22.7736 8.22789 23.549C7.30517 24.3244 6.55633 25.2856 6.03023 26.37C5.82706 27.5298 5.8682 28.7191 6.15103 29.8621C6.43385 31.005 6.95214 32.0763 7.67273 33.0075C8.29446 33.9155 8.7444 34.9297 9.00023 36C8.75761 37.1095 8.30718 38.163 7.67273 39.105C6.95214 40.0362 6.43385 41.1075 6.15103 42.2504C5.8682 43.3934 5.82706 44.5827 6.03023 45.7425C6.55633 46.8269 7.30517 47.7881 8.22789 48.5635C9.15061 49.3389 10.2265 49.911 11.3852 50.2425C12.3937 50.6201 13.3298 51.168 14.1527 51.8625C14.5784 52.876 14.8148 53.9588 14.8502 55.0575C14.8124 56.2548 15.0273 57.4467 15.4809 58.5555C15.9345 59.6642 16.6166 60.665 17.4827 61.4925C18.5306 62.0557 19.6857 62.391 20.8723 62.4763C22.0589 62.5616 23.2501 62.395 24.3677 61.9875C25.4332 61.6766 26.5491 61.5772 27.6527 61.695C28.5284 62.2439 29.2919 62.9539 29.9027 63.7875C30.597 64.804 31.4999 65.6609 32.5513 66.3011C33.6027 66.9412 34.7785 67.3499 36.0002 67.5C37.2062 67.3378 38.3644 66.9234 39.3995 66.2837C40.4346 65.6441 41.3233 64.7935 42.0077 63.7875C42.6186 62.9539 43.3821 62.2439 44.2577 61.695C45.3613 61.5772 46.4773 61.6766 47.5427 61.9875C48.6604 62.395 49.8516 62.5616 51.0382 62.4763C52.2247 62.391 53.3799 62.0557 54.4277 61.4925C55.2939 60.665 55.976 59.6642 56.4296 58.5555C56.8832 57.4467 57.098 56.2548 57.0602 55.0575C57.0957 53.9588 57.3321 52.876 57.7577 51.8625C58.5807 51.168 59.5168 50.6201 60.5252 50.2425C61.684 49.911 62.7599 49.3389 63.6826 48.5635C64.6053 47.7881 65.3541 46.8269 65.8802 45.7425C66.0834 44.5827 66.0423 43.3934 65.7594 42.2504C65.4766 41.1075 64.9583 40.0362 64.2377 39.105C63.635 38.1563 63.2152 37.1032 63.0002 36ZM60.4127 41.31C60.9077 42.21 61.8527 43.8525 61.6952 44.3475C61.5377 44.8425 59.8502 45.6525 58.7702 46.1475C57.0348 46.7801 55.4871 47.8403 54.2702 49.23C53.3055 50.8361 52.778 52.6668 52.7402 54.54C52.6052 55.665 52.4027 57.51 51.9302 57.8475C51.4577 58.185 49.6802 57.8475 48.6002 57.5775C46.7849 57.0496 44.8658 56.9877 43.0202 57.3975C41.3073 58.1208 39.8111 59.2759 38.6777 60.75C37.8677 61.65 36.6302 63 36.0002 63C35.3702 63 34.1327 61.65 33.3227 60.75C32.2081 59.2851 30.7362 58.1307 29.0477 57.3975C28.3907 57.2013 27.7084 57.1028 27.0227 57.105C25.8255 57.1501 24.6352 57.3083 23.4677 57.5775C22.3877 57.8025 20.5652 58.1625 20.1377 57.8475C19.7102 57.5325 19.4627 55.5975 19.3277 54.54C19.29 52.6668 18.7625 50.8361 17.7977 49.23C16.5809 47.8403 15.0331 46.7801 13.2977 46.1475C12.2177 45.6525 10.5752 44.91 10.3727 44.3475C10.1702 43.785 11.1602 42.21 11.6552 41.31C12.7097 39.7246 13.3445 37.8976 13.5002 36C13.3243 34.0962 12.6661 32.2687 11.5877 30.69C11.0927 29.79 10.1477 28.1475 10.3052 27.6525C10.4627 27.1575 12.1502 26.3475 13.2302 25.8525C14.9656 25.2199 16.5134 24.1597 17.7302 22.77C18.695 21.1639 19.2225 19.3332 19.2602 17.46C19.3952 16.335 19.5977 14.49 20.0702 14.1525C20.5427 13.815 22.3202 14.1525 23.4002 14.4225C25.2156 14.9504 27.1347 15.0123 28.9802 14.6025C30.6932 13.8792 32.1894 12.7241 33.3227 11.25C34.1327 10.35 35.3702 9 36.0002 9C36.6302 9 37.8677 10.35 38.6777 11.25C39.7924 12.7149 41.2643 13.8693 42.9527 14.6025C44.7983 15.0123 46.7174 14.9504 48.5327 14.4225C49.6087 14.0853 50.7465 13.993 51.8627 14.1525C52.3352 14.49 52.5377 16.4025 52.6727 17.46C52.7105 19.3332 53.238 21.1639 54.2027 22.77C55.4196 24.1597 56.9673 25.2199 58.7027 25.8525C59.7827 26.3475 61.4252 27.09 61.6277 27.6525C61.8302 28.215 60.8402 29.9025 60.3452 30.69C59.2908 32.2754 58.656 34.1024 58.5002 36C58.6762 37.9038 59.3344 39.7313 60.4127 41.31Z" fill="white"/>
    <path d="M44.5274 27.6524L32.6249 39.5774L28.5974 35.5274C28.3876 35.3176 28.1386 35.1512 27.8645 35.0377C27.5904 34.9242 27.2966 34.8657 26.9999 34.8657C26.7032 34.8657 26.4095 34.9242 26.1354 35.0377C25.8613 35.1512 25.6122 35.3176 25.4024 35.5274C25.1926 35.7372 25.0262 35.9863 24.9127 36.2604C24.7992 36.5345 24.7407 36.8282 24.7407 37.1249C24.7407 37.4216 24.7992 37.7154 24.9127 37.9895C25.0262 38.2636 25.1926 38.5126 25.4024 38.7224L31.0274 44.3474C31.2366 44.5583 31.4854 44.7257 31.7596 44.8399C32.0338 44.9542 32.3279 45.013 32.6249 45.013C32.922 45.013 33.216 44.9542 33.4902 44.8399C33.7644 44.7257 34.0133 44.5583 34.2224 44.3474L47.7224 30.8474C47.9322 30.6376 48.0986 30.3886 48.2122 30.1145C48.3257 29.8404 48.3841 29.5466 48.3841 29.2499C48.3841 28.9532 48.3257 28.6595 48.2122 28.3854C48.0986 28.1113 47.9322 27.8622 47.7224 27.6524C47.5126 27.4426 47.2636 27.2762 46.9895 27.1627C46.7154 27.0492 46.4216 26.9907 46.1249 26.9907C45.8282 26.9907 45.5345 27.0492 45.2604 27.1627C44.9863 27.2762 44.7372 27.4426 44.5274 27.6524Z" fill="white"/>
  </svg>,
  lineColor:'#fff',
  content:"We begin the design and development process, creating custom solutions for your specific business needs.",
  title:'Development'
  },
{
  svgImg:<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 64 64" fill="none">
  <path d="M58.375 3.54443H5.625C2.52338 3.54443 0 6.06781 0 9.16943V43.9536C0 47.0552 2.52338 49.5786 5.625 49.5786H24.5618V56.7056H21.7384C20.7029 56.7056 19.8634 57.5451 19.8634 58.5806C19.8634 59.6161 20.7029 60.4556 21.7384 60.4556H42.2617C43.2972 60.4556 44.1367 59.6161 44.1367 58.5806C44.1367 57.5451 43.2972 56.7056 42.2617 56.7056H39.4384V49.5786H58.375C61.4766 49.5786 64 47.0552 64 43.9536V9.16943C64 6.06781 61.4766 3.54443 58.375 3.54443ZM35.6883 56.7057H28.3118V49.5787H35.6883V56.7057ZM60.25 43.9537C60.25 44.9876 59.4089 45.8287 58.375 45.8287H5.625C4.59113 45.8287 3.75 44.9876 3.75 43.9537V41.1033H60.25V43.9537ZM60.25 37.3533H3.75V9.16943C3.75 8.13556 4.59113 7.29443 5.625 7.29443H58.375C59.4089 7.29443 60.25 8.13556 60.25 9.16943V37.3533Z" fill="white"/>
  <path d="M22.7844 27.1114L17.7053 23.6437L22.7844 20.1761C23.6396 19.5922 23.8596 18.4256 23.2758 17.5704C22.692 16.7152 21.5253 16.4952 20.67 17.079L13.3226 22.0951C12.8109 22.4445 12.5049 23.0241 12.5049 23.6436C12.5049 24.2631 12.8109 24.843 13.3226 25.1924L20.67 30.2085C20.9934 30.4294 21.3614 30.5351 21.7255 30.5351C22.3243 30.5351 22.9128 30.2489 23.2758 29.7171C23.8596 28.8619 23.6396 27.6952 22.7844 27.1114Z" fill="white"/>
  <path d="M50.6772 22.0956L43.3299 17.0795C42.4747 16.4957 41.3081 16.7157 40.7241 17.5709C40.1402 18.4261 40.3602 19.5927 41.2155 20.1766L46.2946 23.6442L41.2155 27.1116C40.3602 27.6955 40.1402 28.8621 40.7241 29.7174C41.0872 30.2492 41.6755 30.5354 42.2744 30.5354C42.6385 30.5354 43.0065 30.4295 43.3299 30.2087L50.6772 25.1926C51.189 24.8432 51.495 24.2636 51.495 23.6441C51.495 23.0246 51.1889 22.4451 50.6772 22.0956Z" fill="white"/>
  <path d="M36.6821 15.3146C35.7796 14.8072 34.6363 15.1275 34.1288 16.0304L26.6016 29.4207C26.0943 30.3232 26.4147 31.4663 27.3175 31.9738C27.608 32.1372 27.9233 32.2147 28.2345 32.2147C28.89 32.2147 29.5265 31.8703 29.8706 31.2582L37.3978 17.8679C37.9053 16.9652 37.5848 15.8221 36.6821 15.3146Z" fill="white"/>
</svg>,
lineColor:'#fff',
content:"We implement our solution into your business operations and integrate them with other systems and platforms.",
title:'Implementation'
},



  
]









const HowItWorks = () => {
  


  return (
    <div className='px-[5%] mt-10  space-y-8 ' >
             <p className="text-[5vw] font-Space font-bold text-white text-center">How It Works</p>


           <div  className='flex flex-col justify-center items-center gap-y-[100px]' >
           {
            svgImgs.map((item,index)=>{
              return(
                <Step  key={index}  props= {{...item,stepNum:index}} />
              )
            })
           }
           </div>
           
          
            
        
    </div>
  )
}

export default HowItWorks